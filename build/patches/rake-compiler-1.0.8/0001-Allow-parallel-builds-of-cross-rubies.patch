From e0be66410b32a41591d27c34e2163ed587ae427b Mon Sep 17 00:00:00 2001
From: Lars Kanis <lars@greiz-reinsdorf.de>
Date: Sun, 22 Dec 2019 21:37:07 +0100
Subject: [PATCH] Allow parallel builds of cross rubies

Download and extraction of sources can not run in parallel, since the sources are used for multiple targets.
Therefore this part can now be separately executed by
  rake-compiler prepare-sources RUBY_CC_VERSION=...

Afterwards multiple cross rubies can be built in parallel by
  rake-compiler cross-ruby RUBY_CC_VERSION=... HOST=...

Access to config.yml must be synchronized, when running in parallel, which is done per File#flock .
---
 lib/rake/extensiontask.rb |  5 +++-
 tasks/bin/cross-ruby.rake | 56 +++++++++++++++++++++------------------
 2 files changed, 34 insertions(+), 27 deletions(-)

diff --git a/lib/rake/extensiontask.rb b/lib/rake/extensiontask.rb
index d85b1a3..89f2198 100644
--- a/lib/rake/extensiontask.rb
+++ b/lib/rake/extensiontask.rb
@@ -376,7 +376,10 @@ Java extension should be preferred.
         return
       end
 
-      config_file = YAML.load_file(config_path)
+      config_file = File.open(config_path) do |fd|
+        fd.flock(File::LOCK_SH)
+        YAML.load(fd.read)
+      end
 
       # tmp_path
       tmp_path = "#{@tmp_dir}/#{for_platform}/#{@name}/#{ruby_ver}"
diff --git a/tasks/bin/cross-ruby.rake b/tasks/bin/cross-ruby.rake
index 37dd220..3fcfe1d 100644
--- a/tasks/bin/cross-ruby.rake
+++ b/tasks/bin/cross-ruby.rake
@@ -126,6 +126,8 @@ file makefile_in => [makefile_in_bak] do |t|
   }
 end
 
+task "prepare-sources" => makefile_in
+
 task :mingw32 do
   unless MINGW_HOST then
     warn "You need to install mingw32 cross compile functionality to be able to continue."
@@ -174,40 +176,42 @@ task :install => ["#{USER_HOME}/ruby/#{MINGW_HOST}/#{RUBY_CC_VERSION}/bin/ruby.e
 desc "Update rake-compiler list of installed Ruby versions"
 task 'update-config' do
   config_file = "#{USER_HOME}/config.yml"
-  if File.exist?(config_file) then
-    puts "Updating #{config_file}"
-    config = YAML.load_file(config_file)
-  else
-    puts "Generating #{config_file}"
-    config = {}
-  end
+  File.open(config_file, File::RDWR|File::CREAT) do |config_fd|
+    config_fd.flock(File::LOCK_EX)
+    config = YAML.load(config_fd.read)
+    if config
+      puts "Updating #{config_file}"
+    else
+      puts "Generating #{config_file}"
+      config = {}
+    end
 
-  files = Dir.glob("#{USER_HOME}/ruby/*/*/**/rbconfig.rb").sort
+    files = Dir.glob("#{USER_HOME}/ruby/*/*/**/rbconfig.rb").sort
 
-  files.each do |rbconfig|
-    version, platform = rbconfig.match(/.*-(\d.\d.\d).*\/([-\w]+)\/rbconfig/)[1,2]
-    platforms = [platform]
+    files.each do |rbconfig|
+      version, platform = rbconfig.match(/.*-(\d.\d.\d).*\/([-\w]+)\/rbconfig/)[1,2]
+      platforms = [platform]
 
-    # fake alternate (binary compatible) i386-mswin32-60 platform
-    platform == "i386-mingw32" and
-      platforms.push "i386-mswin32-60"
+      # fake alternate (binary compatible) i386-mswin32-60 platform
+      platform == "i386-mingw32" and
+        platforms.push "i386-mswin32-60"
 
-    platforms.each do |plat|
-      config["rbconfig-#{plat}-#{version}"] = rbconfig
+      platforms.each do |plat|
+        config["rbconfig-#{plat}-#{version}"] = rbconfig
 
-      # also store RubyGems-compatible version
-      gem_platform = Gem::Platform.new(plat)
-      config["rbconfig-#{gem_platform}-#{version}"] = rbconfig
+        # also store RubyGems-compatible version
+        gem_platform = Gem::Platform.new(plat)
+        config["rbconfig-#{gem_platform}-#{version}"] = rbconfig
+      end
+
+      puts "Found Ruby version #{version} for platform #{platform} (#{rbconfig})"
     end
 
-    puts "Found Ruby version #{version} for platform #{platform} (#{rbconfig})"
+    when_writing("Saving changes into #{config_file}") {
+      config_fd.rewind
+      config_fd.puts config.to_yaml
+    }
   end
-
-  when_writing("Saving changes into #{config_file}") {
-    File.open(config_file, 'w') do |f|
-      f.puts config.to_yaml
-    end
-  }
 end
 
 task :default do
-- 
2.20.1

